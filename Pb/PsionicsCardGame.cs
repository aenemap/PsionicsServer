// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: psionicsCardGame.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PsionicsCardGameProto {

  /// <summary>Holder for reflection information generated from psionicsCardGame.proto</summary>
  public static partial class PsionicsCardGameReflection {

    #region Descriptor
    /// <summary>File descriptor for psionicsCardGame.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PsionicsCardGameReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZwc2lvbmljc0NhcmRHYW1lLnByb3RvEhVQc2lvbmljc0NhcmRHYW1lUHJv",
            "dG8iJgoHV2VsY29tZRIKCgJpZBgBIAEoBRIPCgdtZXNzYWdlGAIgASgJIkMK",
            "D1dlbGNvbWVSZWNlaXZlZBIKCgJpZBgBIAEoBRISCgpjbGllbnROYW1lGAIg",
            "ASgJEhAKCHVzZXJuYW1lGAMgASgJIh4KClVkcFdlbGNvbWUSEAoIY2xpZW50",
            "SWQYASABKAUiQwoOUGxheWVyUG9zaXRpb24SEAoIY2xpZW50SWQYASABKAUS",
            "CQoBWBgCIAEoAhIJCgFZGAMgASgCEgkKAVoYBCABKAIiTgoOUGxheWVyUm90",
            "YXRpb24SEAoIY2xpZW50SWQYASABKAUSCQoBWBgCIAEoAhIJCgFZGAMgASgC",
            "EgkKAVoYBCABKAISCQoBVxgFIAEoAiJxCg5QbGF5ZXJNb3ZlbWVudBIQCghj",
            "bGllbnRJZBgBIAEoBRI9Cg5wbGF5ZXJSb3RhdGlvbhgCIAEoCzIlLlBzaW9u",
            "aWNzQ2FyZEdhbWVQcm90by5QbGF5ZXJSb3RhdGlvbhIOCgZpbnB1dHMYAyAD",
            "KAgiqgEKDFNlcnZlclBsYXllchIKCgJpZBgBIAEoBRIQCgh1c2VybmFtZRgC",
            "IAEoCRI9Cg5wbGF5ZXJQb3NpdGlvbhgDIAEoCzIlLlBzaW9uaWNzQ2FyZEdh",
            "bWVQcm90by5QbGF5ZXJQb3NpdGlvbhI9Cg5wbGF5ZXJSb3RhdGlvbhgEIAEo",
            "CzIlLlBzaW9uaWNzQ2FyZEdhbWVQcm90by5QbGF5ZXJSb3RhdGlvbiIrCgtM",
            "b2JieVBsYXllchIKCgJpZBgBIAEoBRIQCgh1c2VybmFtZRgCIAEoCSIyCgtD",
            "aGFuZ2VTY2VuZRIQCghjbGllbnRJZBgBIAEoBRIRCglzY2VuZU5hbWUYAiAB",
            "KAkioQEKDVBsYXllclRvTG9iYnkSEAoIY2xpZW50SWQYASABKAUSEQoJc2Nl",
            "bmVOYW1lGAIgASgJEjIKBnBsYXllchgDIAEoCzIiLlBzaW9uaWNzQ2FyZEdh",
            "bWVQcm90by5Mb2JieVBsYXllchI3CgthY3RpdmVHYW1lcxgEIAMoCzIiLlBz",
            "aW9uaWNzQ2FyZEdhbWVQcm90by5HYW1lTWVzc2FnZSJCCgtDaGF0TWVzc2Fn",
            "ZRIQCghjbGllbnRJZBgBIAEoBRIQCgh1c2VybmFtZRgCIAEoCRIPCgdtZXNz",
            "YWdlGAMgASgJInMKC0dhbWVNZXNzYWdlEg4KBmdhbWVJZBgBIAEoCRIQCghn",
            "YW1lTmFtZRgCIAEoCRITCgtjcmVhdGVkQnlJZBgDIAEoBRIZChFjcmVhdGVk",
            "QnlVc2VybmFtZRgEIAEoCRISCgpnYW1lU3RhdHVzGAUgASgJIk4KCkNyZWF0",
            "ZUdhbWUSEAoIZ2FtZU5hbWUYASABKAkSEwoLY3JlYXRlZEJ5SWQYAiABKAUS",
            "GQoRY3JlYXRlZEJ5VXNlcm5hbWUYAyABKAkiVgoLR2FtZUNyZWF0ZWQSDgoG",
            "Z2FtZUlkGAEgASgJEjcKC2FjdGl2ZUdhbWVzGAIgAygLMiIuUHNpb25pY3ND",
            "YXJkR2FtZVByb3RvLkdhbWVNZXNzYWdlIiwKCEpvaW5HYW1lEg4KBmdhbWVJ",
            "ZBgBIAEoCRIQCghjbGllbnRJZBgCIAEoBSJMCg1QbGF5ZXJzSW5HYW1lEhAK",
            "CHBsYXllcklkGAEgASgFEhIKCnBsYXllck5hbWUYAiABKAkSFQoNaXNHYW1l",
            "Q3JlYXRvchgDIAEoCCJjChJHYW1lSXNSZWFkeVRvU3RhcnQSEAoIZ2FtZU5h",
            "bWUYASABKAkSOwoNcGxheWVyc0luR2FtZRgCIAMoCzIkLlBzaW9uaWNzQ2Fy",
            "ZEdhbWVQcm90by5QbGF5ZXJzSW5HYW1lIkwKEVVwZGF0ZUFjdGl2ZUdhbWVz",
            "EjcKC2FjdGl2ZUdhbWVzGAEgAygLMiIuUHNpb25pY3NDYXJkR2FtZVByb3Rv",
            "LkdhbWVNZXNzYWdlIh4KDFNlbmRJbnRvR2FtZRIOCgZnYW1lSWQYASABKAki",
            "hgUKDlNlcnZlclJlc3BvbnNlEjEKB3dlbGNvbWUYASABKAsyHi5Qc2lvbmlj",
            "c0NhcmRHYW1lUHJvdG8uV2VsY29tZUgAEjUKBnBsYXllchgCIAEoCzIjLlBz",
            "aW9uaWNzQ2FyZEdhbWVQcm90by5TZXJ2ZXJQbGF5ZXJIABI/Cg5wbGF5ZXJQ",
            "b3NpdGlvbhgDIAEoCzIlLlBzaW9uaWNzQ2FyZEdhbWVQcm90by5QbGF5ZXJQ",
            "b3NpdGlvbkgAEj8KDnBsYXllclJvdGF0aW9uGAQgASgLMiUuUHNpb25pY3ND",
            "YXJkR2FtZVByb3RvLlBsYXllclJvdGF0aW9uSAASOQoLY2hhbmdlU2NlbmUY",
            "BSABKAsyIi5Qc2lvbmljc0NhcmRHYW1lUHJvdG8uQ2hhbmdlU2NlbmVIABI9",
            "Cg1wbGF5ZXJUb0xvYmJ5GAYgASgLMiQuUHNpb25pY3NDYXJkR2FtZVByb3Rv",
            "LlBsYXllclRvTG9iYnlIABI5CgtjaGF0TWVzc2FnZRgHIAEoCzIiLlBzaW9u",
            "aWNzQ2FyZEdhbWVQcm90by5DaGF0TWVzc2FnZUgAEjkKC2dhbWVDcmVhdGVk",
            "GAggASgLMiIuUHNpb25pY3NDYXJkR2FtZVByb3RvLkdhbWVDcmVhdGVkSAAS",
            "RwoSZ2FtZUlzUmVhZHlUb1N0YXJ0GAkgASgLMikuUHNpb25pY3NDYXJkR2Ft",
            "ZVByb3RvLkdhbWVJc1JlYWR5VG9TdGFydEgAEkUKEXVwZGF0ZUFjdGl2ZUdh",
            "bWVzGAogASgLMiguUHNpb25pY3NDYXJkR2FtZVByb3RvLlVwZGF0ZUFjdGl2",
            "ZUdhbWVzSABCCAoGcmVzdWx0IvgDCg1DbGllbnRSZXF1ZXN0EkEKD3dlbGNv",
            "bWVSZWNlaXZlZBgBIAEoCzImLlBzaW9uaWNzQ2FyZEdhbWVQcm90by5XZWxj",
            "b21lUmVjZWl2ZWRIABI3Cgp1ZHBXZWxjb21lGAIgASgLMiEuUHNpb25pY3ND",
            "YXJkR2FtZVByb3RvLlVkcFdlbGNvbWVIABI/Cg5wbGF5ZXJNb3ZlbWVudBgD",
            "IAEoCzIlLlBzaW9uaWNzQ2FyZEdhbWVQcm90by5QbGF5ZXJNb3ZlbWVudEgA",
            "EjkKC2NoYW5nZVNjZW5lGAQgASgLMiIuUHNpb25pY3NDYXJkR2FtZVByb3Rv",
            "LkNoYW5nZVNjZW5lSAASOQoLY2hhdE1lc3NhZ2UYBSABKAsyIi5Qc2lvbmlj",
            "c0NhcmRHYW1lUHJvdG8uQ2hhdE1lc3NhZ2VIABI3CgpjcmVhdGVHYW1lGAYg",
            "ASgLMiEuUHNpb25pY3NDYXJkR2FtZVByb3RvLkNyZWF0ZUdhbWVIABIzCghq",
            "b2luR2FtZRgHIAEoCzIfLlBzaW9uaWNzQ2FyZEdhbWVQcm90by5Kb2luR2Ft",
            "ZUgAEjsKDHNlbmRJbnRvR2FtZRgIIAEoCzIjLlBzaW9uaWNzQ2FyZEdhbWVQ",
            "cm90by5TZW5kSW50b0dhbWVIAEIJCgdyZXF1ZXN0YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PsionicsCardGameProto.Welcome), global::PsionicsCardGameProto.Welcome.Parser, new[]{ "Id", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PsionicsCardGameProto.WelcomeReceived), global::PsionicsCardGameProto.WelcomeReceived.Parser, new[]{ "Id", "ClientName", "Username" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PsionicsCardGameProto.UdpWelcome), global::PsionicsCardGameProto.UdpWelcome.Parser, new[]{ "ClientId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PsionicsCardGameProto.PlayerPosition), global::PsionicsCardGameProto.PlayerPosition.Parser, new[]{ "ClientId", "X", "Y", "Z" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PsionicsCardGameProto.PlayerRotation), global::PsionicsCardGameProto.PlayerRotation.Parser, new[]{ "ClientId", "X", "Y", "Z", "W" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PsionicsCardGameProto.PlayerMovement), global::PsionicsCardGameProto.PlayerMovement.Parser, new[]{ "ClientId", "PlayerRotation", "Inputs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PsionicsCardGameProto.ServerPlayer), global::PsionicsCardGameProto.ServerPlayer.Parser, new[]{ "Id", "Username", "PlayerPosition", "PlayerRotation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PsionicsCardGameProto.LobbyPlayer), global::PsionicsCardGameProto.LobbyPlayer.Parser, new[]{ "Id", "Username" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PsionicsCardGameProto.ChangeScene), global::PsionicsCardGameProto.ChangeScene.Parser, new[]{ "ClientId", "SceneName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PsionicsCardGameProto.PlayerToLobby), global::PsionicsCardGameProto.PlayerToLobby.Parser, new[]{ "ClientId", "SceneName", "Player", "ActiveGames" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PsionicsCardGameProto.ChatMessage), global::PsionicsCardGameProto.ChatMessage.Parser, new[]{ "ClientId", "Username", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PsionicsCardGameProto.GameMessage), global::PsionicsCardGameProto.GameMessage.Parser, new[]{ "GameId", "GameName", "CreatedById", "CreatedByUsername", "GameStatus" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PsionicsCardGameProto.CreateGame), global::PsionicsCardGameProto.CreateGame.Parser, new[]{ "GameName", "CreatedById", "CreatedByUsername" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PsionicsCardGameProto.GameCreated), global::PsionicsCardGameProto.GameCreated.Parser, new[]{ "GameId", "ActiveGames" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PsionicsCardGameProto.JoinGame), global::PsionicsCardGameProto.JoinGame.Parser, new[]{ "GameId", "ClientId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PsionicsCardGameProto.PlayersInGame), global::PsionicsCardGameProto.PlayersInGame.Parser, new[]{ "PlayerId", "PlayerName", "IsGameCreator" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PsionicsCardGameProto.GameIsReadyToStart), global::PsionicsCardGameProto.GameIsReadyToStart.Parser, new[]{ "GameName", "PlayersInGame" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PsionicsCardGameProto.UpdateActiveGames), global::PsionicsCardGameProto.UpdateActiveGames.Parser, new[]{ "ActiveGames" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PsionicsCardGameProto.SendIntoGame), global::PsionicsCardGameProto.SendIntoGame.Parser, new[]{ "GameId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PsionicsCardGameProto.ServerResponse), global::PsionicsCardGameProto.ServerResponse.Parser, new[]{ "Welcome", "Player", "PlayerPosition", "PlayerRotation", "ChangeScene", "PlayerToLobby", "ChatMessage", "GameCreated", "GameIsReadyToStart", "UpdateActiveGames" }, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PsionicsCardGameProto.ClientRequest), global::PsionicsCardGameProto.ClientRequest.Parser, new[]{ "WelcomeReceived", "UdpWelcome", "PlayerMovement", "ChangeScene", "ChatMessage", "CreateGame", "JoinGame", "SendIntoGame" }, new[]{ "Request" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Welcome : pb::IMessage<Welcome>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Welcome> _parser = new pb::MessageParser<Welcome>(() => new Welcome());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Welcome> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PsionicsCardGameProto.PsionicsCardGameReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Welcome() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Welcome(Welcome other) : this() {
      id_ = other.id_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Welcome Clone() {
      return new Welcome(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Welcome);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Welcome other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Welcome other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WelcomeReceived : pb::IMessage<WelcomeReceived>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WelcomeReceived> _parser = new pb::MessageParser<WelcomeReceived>(() => new WelcomeReceived());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WelcomeReceived> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PsionicsCardGameProto.PsionicsCardGameReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WelcomeReceived() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WelcomeReceived(WelcomeReceived other) : this() {
      id_ = other.id_;
      clientName_ = other.clientName_;
      username_ = other.username_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WelcomeReceived Clone() {
      return new WelcomeReceived(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "clientName" field.</summary>
    public const int ClientNameFieldNumber = 2;
    private string clientName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientName {
      get { return clientName_; }
      set {
        clientName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 3;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WelcomeReceived);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WelcomeReceived other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ClientName != other.ClientName) return false;
      if (Username != other.Username) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ClientName.Length != 0) hash ^= ClientName.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (ClientName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientName);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Username);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (ClientName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientName);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Username);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (ClientName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientName);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WelcomeReceived other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ClientName.Length != 0) {
        ClientName = other.ClientName;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            ClientName = input.ReadString();
            break;
          }
          case 26: {
            Username = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            ClientName = input.ReadString();
            break;
          }
          case 26: {
            Username = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UdpWelcome : pb::IMessage<UdpWelcome>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UdpWelcome> _parser = new pb::MessageParser<UdpWelcome>(() => new UdpWelcome());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UdpWelcome> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PsionicsCardGameProto.PsionicsCardGameReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UdpWelcome() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UdpWelcome(UdpWelcome other) : this() {
      clientId_ = other.clientId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UdpWelcome Clone() {
      return new UdpWelcome(this);
    }

    /// <summary>Field number for the "clientId" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private int clientId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ClientId {
      get { return clientId_; }
      set {
        clientId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UdpWelcome);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UdpWelcome other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientId != 0) hash ^= ClientId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClientId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ClientId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClientId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ClientId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClientId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UdpWelcome other) {
      if (other == null) {
        return;
      }
      if (other.ClientId != 0) {
        ClientId = other.ClientId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClientId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ClientId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerPosition : pb::IMessage<PlayerPosition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerPosition> _parser = new pb::MessageParser<PlayerPosition>(() => new PlayerPosition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerPosition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PsionicsCardGameProto.PsionicsCardGameReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerPosition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerPosition(PlayerPosition other) : this() {
      clientId_ = other.clientId_;
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerPosition Clone() {
      return new PlayerPosition(this);
    }

    /// <summary>Field number for the "clientId" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private int clientId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ClientId {
      get { return clientId_; }
      set {
        clientId_ = value;
      }
    }

    /// <summary>Field number for the "X" field.</summary>
    public const int XFieldNumber = 2;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "Y" field.</summary>
    public const int YFieldNumber = 3;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "Z" field.</summary>
    public const int ZFieldNumber = 4;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerPosition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerPosition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientId != 0) hash ^= ClientId.GetHashCode();
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClientId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ClientId);
      }
      if (X != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClientId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ClientId);
      }
      if (X != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClientId);
      }
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerPosition other) {
      if (other == null) {
        return;
      }
      if (other.ClientId != 0) {
        ClientId = other.ClientId;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClientId = input.ReadInt32();
            break;
          }
          case 21: {
            X = input.ReadFloat();
            break;
          }
          case 29: {
            Y = input.ReadFloat();
            break;
          }
          case 37: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ClientId = input.ReadInt32();
            break;
          }
          case 21: {
            X = input.ReadFloat();
            break;
          }
          case 29: {
            Y = input.ReadFloat();
            break;
          }
          case 37: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerRotation : pb::IMessage<PlayerRotation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerRotation> _parser = new pb::MessageParser<PlayerRotation>(() => new PlayerRotation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerRotation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PsionicsCardGameProto.PsionicsCardGameReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerRotation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerRotation(PlayerRotation other) : this() {
      clientId_ = other.clientId_;
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      w_ = other.w_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerRotation Clone() {
      return new PlayerRotation(this);
    }

    /// <summary>Field number for the "clientId" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private int clientId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ClientId {
      get { return clientId_; }
      set {
        clientId_ = value;
      }
    }

    /// <summary>Field number for the "X" field.</summary>
    public const int XFieldNumber = 2;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "Y" field.</summary>
    public const int YFieldNumber = 3;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "Z" field.</summary>
    public const int ZFieldNumber = 4;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    /// <summary>Field number for the "W" field.</summary>
    public const int WFieldNumber = 5;
    private float w_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float W {
      get { return w_; }
      set {
        w_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerRotation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerRotation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(W, other.W)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientId != 0) hash ^= ClientId.GetHashCode();
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (W != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(W);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClientId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ClientId);
      }
      if (X != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Z);
      }
      if (W != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(W);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClientId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ClientId);
      }
      if (X != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Z);
      }
      if (W != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(W);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClientId);
      }
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (W != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerRotation other) {
      if (other == null) {
        return;
      }
      if (other.ClientId != 0) {
        ClientId = other.ClientId;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      if (other.W != 0F) {
        W = other.W;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClientId = input.ReadInt32();
            break;
          }
          case 21: {
            X = input.ReadFloat();
            break;
          }
          case 29: {
            Y = input.ReadFloat();
            break;
          }
          case 37: {
            Z = input.ReadFloat();
            break;
          }
          case 45: {
            W = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ClientId = input.ReadInt32();
            break;
          }
          case 21: {
            X = input.ReadFloat();
            break;
          }
          case 29: {
            Y = input.ReadFloat();
            break;
          }
          case 37: {
            Z = input.ReadFloat();
            break;
          }
          case 45: {
            W = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerMovement : pb::IMessage<PlayerMovement>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerMovement> _parser = new pb::MessageParser<PlayerMovement>(() => new PlayerMovement());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerMovement> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PsionicsCardGameProto.PsionicsCardGameReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerMovement() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerMovement(PlayerMovement other) : this() {
      clientId_ = other.clientId_;
      playerRotation_ = other.playerRotation_ != null ? other.playerRotation_.Clone() : null;
      inputs_ = other.inputs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerMovement Clone() {
      return new PlayerMovement(this);
    }

    /// <summary>Field number for the "clientId" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private int clientId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ClientId {
      get { return clientId_; }
      set {
        clientId_ = value;
      }
    }

    /// <summary>Field number for the "playerRotation" field.</summary>
    public const int PlayerRotationFieldNumber = 2;
    private global::PsionicsCardGameProto.PlayerRotation playerRotation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PsionicsCardGameProto.PlayerRotation PlayerRotation {
      get { return playerRotation_; }
      set {
        playerRotation_ = value;
      }
    }

    /// <summary>Field number for the "inputs" field.</summary>
    public const int InputsFieldNumber = 3;
    private static readonly pb::FieldCodec<bool> _repeated_inputs_codec
        = pb::FieldCodec.ForBool(26);
    private readonly pbc::RepeatedField<bool> inputs_ = new pbc::RepeatedField<bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<bool> Inputs {
      get { return inputs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerMovement);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerMovement other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      if (!object.Equals(PlayerRotation, other.PlayerRotation)) return false;
      if(!inputs_.Equals(other.inputs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientId != 0) hash ^= ClientId.GetHashCode();
      if (playerRotation_ != null) hash ^= PlayerRotation.GetHashCode();
      hash ^= inputs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClientId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ClientId);
      }
      if (playerRotation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PlayerRotation);
      }
      inputs_.WriteTo(output, _repeated_inputs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClientId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ClientId);
      }
      if (playerRotation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PlayerRotation);
      }
      inputs_.WriteTo(ref output, _repeated_inputs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClientId);
      }
      if (playerRotation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerRotation);
      }
      size += inputs_.CalculateSize(_repeated_inputs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerMovement other) {
      if (other == null) {
        return;
      }
      if (other.ClientId != 0) {
        ClientId = other.ClientId;
      }
      if (other.playerRotation_ != null) {
        if (playerRotation_ == null) {
          PlayerRotation = new global::PsionicsCardGameProto.PlayerRotation();
        }
        PlayerRotation.MergeFrom(other.PlayerRotation);
      }
      inputs_.Add(other.inputs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClientId = input.ReadInt32();
            break;
          }
          case 18: {
            if (playerRotation_ == null) {
              PlayerRotation = new global::PsionicsCardGameProto.PlayerRotation();
            }
            input.ReadMessage(PlayerRotation);
            break;
          }
          case 26:
          case 24: {
            inputs_.AddEntriesFrom(input, _repeated_inputs_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ClientId = input.ReadInt32();
            break;
          }
          case 18: {
            if (playerRotation_ == null) {
              PlayerRotation = new global::PsionicsCardGameProto.PlayerRotation();
            }
            input.ReadMessage(PlayerRotation);
            break;
          }
          case 26:
          case 24: {
            inputs_.AddEntriesFrom(ref input, _repeated_inputs_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ServerPlayer : pb::IMessage<ServerPlayer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ServerPlayer> _parser = new pb::MessageParser<ServerPlayer>(() => new ServerPlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerPlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PsionicsCardGameProto.PsionicsCardGameReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerPlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerPlayer(ServerPlayer other) : this() {
      id_ = other.id_;
      username_ = other.username_;
      playerPosition_ = other.playerPosition_ != null ? other.playerPosition_.Clone() : null;
      playerRotation_ = other.playerRotation_ != null ? other.playerRotation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerPlayer Clone() {
      return new ServerPlayer(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 2;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playerPosition" field.</summary>
    public const int PlayerPositionFieldNumber = 3;
    private global::PsionicsCardGameProto.PlayerPosition playerPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PsionicsCardGameProto.PlayerPosition PlayerPosition {
      get { return playerPosition_; }
      set {
        playerPosition_ = value;
      }
    }

    /// <summary>Field number for the "playerRotation" field.</summary>
    public const int PlayerRotationFieldNumber = 4;
    private global::PsionicsCardGameProto.PlayerRotation playerRotation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PsionicsCardGameProto.PlayerRotation PlayerRotation {
      get { return playerRotation_; }
      set {
        playerRotation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerPlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerPlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Username != other.Username) return false;
      if (!object.Equals(PlayerPosition, other.PlayerPosition)) return false;
      if (!object.Equals(PlayerRotation, other.PlayerRotation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (playerPosition_ != null) hash ^= PlayerPosition.GetHashCode();
      if (playerRotation_ != null) hash ^= PlayerRotation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (playerPosition_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PlayerPosition);
      }
      if (playerRotation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PlayerRotation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (playerPosition_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PlayerPosition);
      }
      if (playerRotation_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PlayerRotation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (playerPosition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerPosition);
      }
      if (playerRotation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerRotation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerPlayer other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.playerPosition_ != null) {
        if (playerPosition_ == null) {
          PlayerPosition = new global::PsionicsCardGameProto.PlayerPosition();
        }
        PlayerPosition.MergeFrom(other.PlayerPosition);
      }
      if (other.playerRotation_ != null) {
        if (playerRotation_ == null) {
          PlayerRotation = new global::PsionicsCardGameProto.PlayerRotation();
        }
        PlayerRotation.MergeFrom(other.PlayerRotation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 26: {
            if (playerPosition_ == null) {
              PlayerPosition = new global::PsionicsCardGameProto.PlayerPosition();
            }
            input.ReadMessage(PlayerPosition);
            break;
          }
          case 34: {
            if (playerRotation_ == null) {
              PlayerRotation = new global::PsionicsCardGameProto.PlayerRotation();
            }
            input.ReadMessage(PlayerRotation);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 26: {
            if (playerPosition_ == null) {
              PlayerPosition = new global::PsionicsCardGameProto.PlayerPosition();
            }
            input.ReadMessage(PlayerPosition);
            break;
          }
          case 34: {
            if (playerRotation_ == null) {
              PlayerRotation = new global::PsionicsCardGameProto.PlayerRotation();
            }
            input.ReadMessage(PlayerRotation);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LobbyPlayer : pb::IMessage<LobbyPlayer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LobbyPlayer> _parser = new pb::MessageParser<LobbyPlayer>(() => new LobbyPlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LobbyPlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PsionicsCardGameProto.PsionicsCardGameReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyPlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyPlayer(LobbyPlayer other) : this() {
      id_ = other.id_;
      username_ = other.username_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyPlayer Clone() {
      return new LobbyPlayer(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 2;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LobbyPlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LobbyPlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Username != other.Username) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LobbyPlayer other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ChangeScene : pb::IMessage<ChangeScene>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChangeScene> _parser = new pb::MessageParser<ChangeScene>(() => new ChangeScene());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChangeScene> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PsionicsCardGameProto.PsionicsCardGameReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeScene() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeScene(ChangeScene other) : this() {
      clientId_ = other.clientId_;
      sceneName_ = other.sceneName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeScene Clone() {
      return new ChangeScene(this);
    }

    /// <summary>Field number for the "clientId" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private int clientId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ClientId {
      get { return clientId_; }
      set {
        clientId_ = value;
      }
    }

    /// <summary>Field number for the "sceneName" field.</summary>
    public const int SceneNameFieldNumber = 2;
    private string sceneName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SceneName {
      get { return sceneName_; }
      set {
        sceneName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChangeScene);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChangeScene other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      if (SceneName != other.SceneName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientId != 0) hash ^= ClientId.GetHashCode();
      if (SceneName.Length != 0) hash ^= SceneName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClientId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ClientId);
      }
      if (SceneName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SceneName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClientId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ClientId);
      }
      if (SceneName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SceneName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClientId);
      }
      if (SceneName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SceneName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChangeScene other) {
      if (other == null) {
        return;
      }
      if (other.ClientId != 0) {
        ClientId = other.ClientId;
      }
      if (other.SceneName.Length != 0) {
        SceneName = other.SceneName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClientId = input.ReadInt32();
            break;
          }
          case 18: {
            SceneName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ClientId = input.ReadInt32();
            break;
          }
          case 18: {
            SceneName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerToLobby : pb::IMessage<PlayerToLobby>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerToLobby> _parser = new pb::MessageParser<PlayerToLobby>(() => new PlayerToLobby());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerToLobby> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PsionicsCardGameProto.PsionicsCardGameReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerToLobby() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerToLobby(PlayerToLobby other) : this() {
      clientId_ = other.clientId_;
      sceneName_ = other.sceneName_;
      player_ = other.player_ != null ? other.player_.Clone() : null;
      activeGames_ = other.activeGames_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerToLobby Clone() {
      return new PlayerToLobby(this);
    }

    /// <summary>Field number for the "clientId" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private int clientId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ClientId {
      get { return clientId_; }
      set {
        clientId_ = value;
      }
    }

    /// <summary>Field number for the "sceneName" field.</summary>
    public const int SceneNameFieldNumber = 2;
    private string sceneName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SceneName {
      get { return sceneName_; }
      set {
        sceneName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 3;
    private global::PsionicsCardGameProto.LobbyPlayer player_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PsionicsCardGameProto.LobbyPlayer Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    /// <summary>Field number for the "activeGames" field.</summary>
    public const int ActiveGamesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::PsionicsCardGameProto.GameMessage> _repeated_activeGames_codec
        = pb::FieldCodec.ForMessage(34, global::PsionicsCardGameProto.GameMessage.Parser);
    private readonly pbc::RepeatedField<global::PsionicsCardGameProto.GameMessage> activeGames_ = new pbc::RepeatedField<global::PsionicsCardGameProto.GameMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PsionicsCardGameProto.GameMessage> ActiveGames {
      get { return activeGames_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerToLobby);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerToLobby other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      if (SceneName != other.SceneName) return false;
      if (!object.Equals(Player, other.Player)) return false;
      if(!activeGames_.Equals(other.activeGames_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientId != 0) hash ^= ClientId.GetHashCode();
      if (SceneName.Length != 0) hash ^= SceneName.GetHashCode();
      if (player_ != null) hash ^= Player.GetHashCode();
      hash ^= activeGames_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClientId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ClientId);
      }
      if (SceneName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SceneName);
      }
      if (player_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Player);
      }
      activeGames_.WriteTo(output, _repeated_activeGames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClientId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ClientId);
      }
      if (SceneName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SceneName);
      }
      if (player_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Player);
      }
      activeGames_.WriteTo(ref output, _repeated_activeGames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClientId);
      }
      if (SceneName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SceneName);
      }
      if (player_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player);
      }
      size += activeGames_.CalculateSize(_repeated_activeGames_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerToLobby other) {
      if (other == null) {
        return;
      }
      if (other.ClientId != 0) {
        ClientId = other.ClientId;
      }
      if (other.SceneName.Length != 0) {
        SceneName = other.SceneName;
      }
      if (other.player_ != null) {
        if (player_ == null) {
          Player = new global::PsionicsCardGameProto.LobbyPlayer();
        }
        Player.MergeFrom(other.Player);
      }
      activeGames_.Add(other.activeGames_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClientId = input.ReadInt32();
            break;
          }
          case 18: {
            SceneName = input.ReadString();
            break;
          }
          case 26: {
            if (player_ == null) {
              Player = new global::PsionicsCardGameProto.LobbyPlayer();
            }
            input.ReadMessage(Player);
            break;
          }
          case 34: {
            activeGames_.AddEntriesFrom(input, _repeated_activeGames_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ClientId = input.ReadInt32();
            break;
          }
          case 18: {
            SceneName = input.ReadString();
            break;
          }
          case 26: {
            if (player_ == null) {
              Player = new global::PsionicsCardGameProto.LobbyPlayer();
            }
            input.ReadMessage(Player);
            break;
          }
          case 34: {
            activeGames_.AddEntriesFrom(ref input, _repeated_activeGames_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ChatMessage : pb::IMessage<ChatMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChatMessage> _parser = new pb::MessageParser<ChatMessage>(() => new ChatMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PsionicsCardGameProto.PsionicsCardGameReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMessage(ChatMessage other) : this() {
      clientId_ = other.clientId_;
      username_ = other.username_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMessage Clone() {
      return new ChatMessage(this);
    }

    /// <summary>Field number for the "clientId" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private int clientId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ClientId {
      get { return clientId_; }
      set {
        clientId_ = value;
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 2;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 3;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      if (Username != other.Username) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientId != 0) hash ^= ClientId.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClientId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ClientId);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClientId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ClientId);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClientId);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatMessage other) {
      if (other == null) {
        return;
      }
      if (other.ClientId != 0) {
        ClientId = other.ClientId;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ClientId = input.ReadInt32();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ClientId = input.ReadInt32();
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GameMessage : pb::IMessage<GameMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameMessage> _parser = new pb::MessageParser<GameMessage>(() => new GameMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PsionicsCardGameProto.PsionicsCardGameReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameMessage(GameMessage other) : this() {
      gameId_ = other.gameId_;
      gameName_ = other.gameName_;
      createdById_ = other.createdById_;
      createdByUsername_ = other.createdByUsername_;
      gameStatus_ = other.gameStatus_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameMessage Clone() {
      return new GameMessage(this);
    }

    /// <summary>Field number for the "gameId" field.</summary>
    public const int GameIdFieldNumber = 1;
    private string gameId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameId {
      get { return gameId_; }
      set {
        gameId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gameName" field.</summary>
    public const int GameNameFieldNumber = 2;
    private string gameName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameName {
      get { return gameName_; }
      set {
        gameName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "createdById" field.</summary>
    public const int CreatedByIdFieldNumber = 3;
    private int createdById_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CreatedById {
      get { return createdById_; }
      set {
        createdById_ = value;
      }
    }

    /// <summary>Field number for the "createdByUsername" field.</summary>
    public const int CreatedByUsernameFieldNumber = 4;
    private string createdByUsername_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedByUsername {
      get { return createdByUsername_; }
      set {
        createdByUsername_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gameStatus" field.</summary>
    public const int GameStatusFieldNumber = 5;
    private string gameStatus_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameStatus {
      get { return gameStatus_; }
      set {
        gameStatus_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameId != other.GameId) return false;
      if (GameName != other.GameName) return false;
      if (CreatedById != other.CreatedById) return false;
      if (CreatedByUsername != other.CreatedByUsername) return false;
      if (GameStatus != other.GameStatus) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameId.Length != 0) hash ^= GameId.GetHashCode();
      if (GameName.Length != 0) hash ^= GameName.GetHashCode();
      if (CreatedById != 0) hash ^= CreatedById.GetHashCode();
      if (CreatedByUsername.Length != 0) hash ^= CreatedByUsername.GetHashCode();
      if (GameStatus.Length != 0) hash ^= GameStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GameId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameId);
      }
      if (GameName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GameName);
      }
      if (CreatedById != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CreatedById);
      }
      if (CreatedByUsername.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CreatedByUsername);
      }
      if (GameStatus.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(GameStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GameId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameId);
      }
      if (GameName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GameName);
      }
      if (CreatedById != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CreatedById);
      }
      if (CreatedByUsername.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CreatedByUsername);
      }
      if (GameStatus.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(GameStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameId);
      }
      if (GameName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameName);
      }
      if (CreatedById != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CreatedById);
      }
      if (CreatedByUsername.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedByUsername);
      }
      if (GameStatus.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameMessage other) {
      if (other == null) {
        return;
      }
      if (other.GameId.Length != 0) {
        GameId = other.GameId;
      }
      if (other.GameName.Length != 0) {
        GameName = other.GameName;
      }
      if (other.CreatedById != 0) {
        CreatedById = other.CreatedById;
      }
      if (other.CreatedByUsername.Length != 0) {
        CreatedByUsername = other.CreatedByUsername;
      }
      if (other.GameStatus.Length != 0) {
        GameStatus = other.GameStatus;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GameId = input.ReadString();
            break;
          }
          case 18: {
            GameName = input.ReadString();
            break;
          }
          case 24: {
            CreatedById = input.ReadInt32();
            break;
          }
          case 34: {
            CreatedByUsername = input.ReadString();
            break;
          }
          case 42: {
            GameStatus = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GameId = input.ReadString();
            break;
          }
          case 18: {
            GameName = input.ReadString();
            break;
          }
          case 24: {
            CreatedById = input.ReadInt32();
            break;
          }
          case 34: {
            CreatedByUsername = input.ReadString();
            break;
          }
          case 42: {
            GameStatus = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CreateGame : pb::IMessage<CreateGame>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateGame> _parser = new pb::MessageParser<CreateGame>(() => new CreateGame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateGame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PsionicsCardGameProto.PsionicsCardGameReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateGame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateGame(CreateGame other) : this() {
      gameName_ = other.gameName_;
      createdById_ = other.createdById_;
      createdByUsername_ = other.createdByUsername_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateGame Clone() {
      return new CreateGame(this);
    }

    /// <summary>Field number for the "gameName" field.</summary>
    public const int GameNameFieldNumber = 1;
    private string gameName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameName {
      get { return gameName_; }
      set {
        gameName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "createdById" field.</summary>
    public const int CreatedByIdFieldNumber = 2;
    private int createdById_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CreatedById {
      get { return createdById_; }
      set {
        createdById_ = value;
      }
    }

    /// <summary>Field number for the "createdByUsername" field.</summary>
    public const int CreatedByUsernameFieldNumber = 3;
    private string createdByUsername_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedByUsername {
      get { return createdByUsername_; }
      set {
        createdByUsername_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateGame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateGame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameName != other.GameName) return false;
      if (CreatedById != other.CreatedById) return false;
      if (CreatedByUsername != other.CreatedByUsername) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameName.Length != 0) hash ^= GameName.GetHashCode();
      if (CreatedById != 0) hash ^= CreatedById.GetHashCode();
      if (CreatedByUsername.Length != 0) hash ^= CreatedByUsername.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GameName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameName);
      }
      if (CreatedById != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CreatedById);
      }
      if (CreatedByUsername.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CreatedByUsername);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GameName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameName);
      }
      if (CreatedById != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CreatedById);
      }
      if (CreatedByUsername.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CreatedByUsername);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameName);
      }
      if (CreatedById != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CreatedById);
      }
      if (CreatedByUsername.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedByUsername);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateGame other) {
      if (other == null) {
        return;
      }
      if (other.GameName.Length != 0) {
        GameName = other.GameName;
      }
      if (other.CreatedById != 0) {
        CreatedById = other.CreatedById;
      }
      if (other.CreatedByUsername.Length != 0) {
        CreatedByUsername = other.CreatedByUsername;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GameName = input.ReadString();
            break;
          }
          case 16: {
            CreatedById = input.ReadInt32();
            break;
          }
          case 26: {
            CreatedByUsername = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GameName = input.ReadString();
            break;
          }
          case 16: {
            CreatedById = input.ReadInt32();
            break;
          }
          case 26: {
            CreatedByUsername = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GameCreated : pb::IMessage<GameCreated>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameCreated> _parser = new pb::MessageParser<GameCreated>(() => new GameCreated());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameCreated> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PsionicsCardGameProto.PsionicsCardGameReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameCreated() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameCreated(GameCreated other) : this() {
      gameId_ = other.gameId_;
      activeGames_ = other.activeGames_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameCreated Clone() {
      return new GameCreated(this);
    }

    /// <summary>Field number for the "gameId" field.</summary>
    public const int GameIdFieldNumber = 1;
    private string gameId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameId {
      get { return gameId_; }
      set {
        gameId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "activeGames" field.</summary>
    public const int ActiveGamesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::PsionicsCardGameProto.GameMessage> _repeated_activeGames_codec
        = pb::FieldCodec.ForMessage(18, global::PsionicsCardGameProto.GameMessage.Parser);
    private readonly pbc::RepeatedField<global::PsionicsCardGameProto.GameMessage> activeGames_ = new pbc::RepeatedField<global::PsionicsCardGameProto.GameMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PsionicsCardGameProto.GameMessage> ActiveGames {
      get { return activeGames_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameCreated);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameCreated other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameId != other.GameId) return false;
      if(!activeGames_.Equals(other.activeGames_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameId.Length != 0) hash ^= GameId.GetHashCode();
      hash ^= activeGames_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GameId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameId);
      }
      activeGames_.WriteTo(output, _repeated_activeGames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GameId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameId);
      }
      activeGames_.WriteTo(ref output, _repeated_activeGames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameId);
      }
      size += activeGames_.CalculateSize(_repeated_activeGames_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameCreated other) {
      if (other == null) {
        return;
      }
      if (other.GameId.Length != 0) {
        GameId = other.GameId;
      }
      activeGames_.Add(other.activeGames_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GameId = input.ReadString();
            break;
          }
          case 18: {
            activeGames_.AddEntriesFrom(input, _repeated_activeGames_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GameId = input.ReadString();
            break;
          }
          case 18: {
            activeGames_.AddEntriesFrom(ref input, _repeated_activeGames_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class JoinGame : pb::IMessage<JoinGame>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<JoinGame> _parser = new pb::MessageParser<JoinGame>(() => new JoinGame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinGame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PsionicsCardGameProto.PsionicsCardGameReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinGame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinGame(JoinGame other) : this() {
      gameId_ = other.gameId_;
      clientId_ = other.clientId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinGame Clone() {
      return new JoinGame(this);
    }

    /// <summary>Field number for the "gameId" field.</summary>
    public const int GameIdFieldNumber = 1;
    private string gameId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameId {
      get { return gameId_; }
      set {
        gameId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "clientId" field.</summary>
    public const int ClientIdFieldNumber = 2;
    private int clientId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ClientId {
      get { return clientId_; }
      set {
        clientId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinGame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinGame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameId != other.GameId) return false;
      if (ClientId != other.ClientId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameId.Length != 0) hash ^= GameId.GetHashCode();
      if (ClientId != 0) hash ^= ClientId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GameId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameId);
      }
      if (ClientId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ClientId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GameId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameId);
      }
      if (ClientId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ClientId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameId);
      }
      if (ClientId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClientId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinGame other) {
      if (other == null) {
        return;
      }
      if (other.GameId.Length != 0) {
        GameId = other.GameId;
      }
      if (other.ClientId != 0) {
        ClientId = other.ClientId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GameId = input.ReadString();
            break;
          }
          case 16: {
            ClientId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GameId = input.ReadString();
            break;
          }
          case 16: {
            ClientId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayersInGame : pb::IMessage<PlayersInGame>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayersInGame> _parser = new pb::MessageParser<PlayersInGame>(() => new PlayersInGame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayersInGame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PsionicsCardGameProto.PsionicsCardGameReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayersInGame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayersInGame(PlayersInGame other) : this() {
      playerId_ = other.playerId_;
      playerName_ = other.playerName_;
      isGameCreator_ = other.isGameCreator_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayersInGame Clone() {
      return new PlayersInGame(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "playerName" field.</summary>
    public const int PlayerNameFieldNumber = 2;
    private string playerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerName {
      get { return playerName_; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isGameCreator" field.</summary>
    public const int IsGameCreatorFieldNumber = 3;
    private bool isGameCreator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsGameCreator {
      get { return isGameCreator_; }
      set {
        isGameCreator_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayersInGame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayersInGame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PlayerName != other.PlayerName) return false;
      if (IsGameCreator != other.IsGameCreator) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
      if (IsGameCreator != false) hash ^= IsGameCreator.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerName);
      }
      if (IsGameCreator != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsGameCreator);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerName);
      }
      if (IsGameCreator != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsGameCreator);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (PlayerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      if (IsGameCreator != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayersInGame other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PlayerName.Length != 0) {
        PlayerName = other.PlayerName;
      }
      if (other.IsGameCreator != false) {
        IsGameCreator = other.IsGameCreator;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            PlayerName = input.ReadString();
            break;
          }
          case 24: {
            IsGameCreator = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            PlayerName = input.ReadString();
            break;
          }
          case 24: {
            IsGameCreator = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GameIsReadyToStart : pb::IMessage<GameIsReadyToStart>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameIsReadyToStart> _parser = new pb::MessageParser<GameIsReadyToStart>(() => new GameIsReadyToStart());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameIsReadyToStart> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PsionicsCardGameProto.PsionicsCardGameReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameIsReadyToStart() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameIsReadyToStart(GameIsReadyToStart other) : this() {
      gameName_ = other.gameName_;
      playersInGame_ = other.playersInGame_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameIsReadyToStart Clone() {
      return new GameIsReadyToStart(this);
    }

    /// <summary>Field number for the "gameName" field.</summary>
    public const int GameNameFieldNumber = 1;
    private string gameName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameName {
      get { return gameName_; }
      set {
        gameName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "playersInGame" field.</summary>
    public const int PlayersInGameFieldNumber = 2;
    private static readonly pb::FieldCodec<global::PsionicsCardGameProto.PlayersInGame> _repeated_playersInGame_codec
        = pb::FieldCodec.ForMessage(18, global::PsionicsCardGameProto.PlayersInGame.Parser);
    private readonly pbc::RepeatedField<global::PsionicsCardGameProto.PlayersInGame> playersInGame_ = new pbc::RepeatedField<global::PsionicsCardGameProto.PlayersInGame>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PsionicsCardGameProto.PlayersInGame> PlayersInGame {
      get { return playersInGame_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameIsReadyToStart);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameIsReadyToStart other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameName != other.GameName) return false;
      if(!playersInGame_.Equals(other.playersInGame_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameName.Length != 0) hash ^= GameName.GetHashCode();
      hash ^= playersInGame_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GameName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameName);
      }
      playersInGame_.WriteTo(output, _repeated_playersInGame_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GameName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameName);
      }
      playersInGame_.WriteTo(ref output, _repeated_playersInGame_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameName);
      }
      size += playersInGame_.CalculateSize(_repeated_playersInGame_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameIsReadyToStart other) {
      if (other == null) {
        return;
      }
      if (other.GameName.Length != 0) {
        GameName = other.GameName;
      }
      playersInGame_.Add(other.playersInGame_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GameName = input.ReadString();
            break;
          }
          case 18: {
            playersInGame_.AddEntriesFrom(input, _repeated_playersInGame_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GameName = input.ReadString();
            break;
          }
          case 18: {
            playersInGame_.AddEntriesFrom(ref input, _repeated_playersInGame_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UpdateActiveGames : pb::IMessage<UpdateActiveGames>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateActiveGames> _parser = new pb::MessageParser<UpdateActiveGames>(() => new UpdateActiveGames());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateActiveGames> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PsionicsCardGameProto.PsionicsCardGameReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateActiveGames() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateActiveGames(UpdateActiveGames other) : this() {
      activeGames_ = other.activeGames_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateActiveGames Clone() {
      return new UpdateActiveGames(this);
    }

    /// <summary>Field number for the "activeGames" field.</summary>
    public const int ActiveGamesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::PsionicsCardGameProto.GameMessage> _repeated_activeGames_codec
        = pb::FieldCodec.ForMessage(10, global::PsionicsCardGameProto.GameMessage.Parser);
    private readonly pbc::RepeatedField<global::PsionicsCardGameProto.GameMessage> activeGames_ = new pbc::RepeatedField<global::PsionicsCardGameProto.GameMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PsionicsCardGameProto.GameMessage> ActiveGames {
      get { return activeGames_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateActiveGames);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateActiveGames other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!activeGames_.Equals(other.activeGames_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= activeGames_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      activeGames_.WriteTo(output, _repeated_activeGames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      activeGames_.WriteTo(ref output, _repeated_activeGames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += activeGames_.CalculateSize(_repeated_activeGames_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateActiveGames other) {
      if (other == null) {
        return;
      }
      activeGames_.Add(other.activeGames_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            activeGames_.AddEntriesFrom(input, _repeated_activeGames_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            activeGames_.AddEntriesFrom(ref input, _repeated_activeGames_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SendIntoGame : pb::IMessage<SendIntoGame>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SendIntoGame> _parser = new pb::MessageParser<SendIntoGame>(() => new SendIntoGame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SendIntoGame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PsionicsCardGameProto.PsionicsCardGameReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendIntoGame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendIntoGame(SendIntoGame other) : this() {
      gameId_ = other.gameId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SendIntoGame Clone() {
      return new SendIntoGame(this);
    }

    /// <summary>Field number for the "gameId" field.</summary>
    public const int GameIdFieldNumber = 1;
    private string gameId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameId {
      get { return gameId_; }
      set {
        gameId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SendIntoGame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SendIntoGame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameId != other.GameId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameId.Length != 0) hash ^= GameId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GameId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GameId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SendIntoGame other) {
      if (other == null) {
        return;
      }
      if (other.GameId.Length != 0) {
        GameId = other.GameId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GameId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GameId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ServerResponse : pb::IMessage<ServerResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ServerResponse> _parser = new pb::MessageParser<ServerResponse>(() => new ServerResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PsionicsCardGameProto.PsionicsCardGameReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerResponse(ServerResponse other) : this() {
      switch (other.ResultCase) {
        case ResultOneofCase.Welcome:
          Welcome = other.Welcome.Clone();
          break;
        case ResultOneofCase.Player:
          Player = other.Player.Clone();
          break;
        case ResultOneofCase.PlayerPosition:
          PlayerPosition = other.PlayerPosition.Clone();
          break;
        case ResultOneofCase.PlayerRotation:
          PlayerRotation = other.PlayerRotation.Clone();
          break;
        case ResultOneofCase.ChangeScene:
          ChangeScene = other.ChangeScene.Clone();
          break;
        case ResultOneofCase.PlayerToLobby:
          PlayerToLobby = other.PlayerToLobby.Clone();
          break;
        case ResultOneofCase.ChatMessage:
          ChatMessage = other.ChatMessage.Clone();
          break;
        case ResultOneofCase.GameCreated:
          GameCreated = other.GameCreated.Clone();
          break;
        case ResultOneofCase.GameIsReadyToStart:
          GameIsReadyToStart = other.GameIsReadyToStart.Clone();
          break;
        case ResultOneofCase.UpdateActiveGames:
          UpdateActiveGames = other.UpdateActiveGames.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerResponse Clone() {
      return new ServerResponse(this);
    }

    /// <summary>Field number for the "welcome" field.</summary>
    public const int WelcomeFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PsionicsCardGameProto.Welcome Welcome {
      get { return resultCase_ == ResultOneofCase.Welcome ? (global::PsionicsCardGameProto.Welcome) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.Welcome;
      }
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PsionicsCardGameProto.ServerPlayer Player {
      get { return resultCase_ == ResultOneofCase.Player ? (global::PsionicsCardGameProto.ServerPlayer) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.Player;
      }
    }

    /// <summary>Field number for the "playerPosition" field.</summary>
    public const int PlayerPositionFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PsionicsCardGameProto.PlayerPosition PlayerPosition {
      get { return resultCase_ == ResultOneofCase.PlayerPosition ? (global::PsionicsCardGameProto.PlayerPosition) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.PlayerPosition;
      }
    }

    /// <summary>Field number for the "playerRotation" field.</summary>
    public const int PlayerRotationFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PsionicsCardGameProto.PlayerRotation PlayerRotation {
      get { return resultCase_ == ResultOneofCase.PlayerRotation ? (global::PsionicsCardGameProto.PlayerRotation) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.PlayerRotation;
      }
    }

    /// <summary>Field number for the "changeScene" field.</summary>
    public const int ChangeSceneFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PsionicsCardGameProto.ChangeScene ChangeScene {
      get { return resultCase_ == ResultOneofCase.ChangeScene ? (global::PsionicsCardGameProto.ChangeScene) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.ChangeScene;
      }
    }

    /// <summary>Field number for the "playerToLobby" field.</summary>
    public const int PlayerToLobbyFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PsionicsCardGameProto.PlayerToLobby PlayerToLobby {
      get { return resultCase_ == ResultOneofCase.PlayerToLobby ? (global::PsionicsCardGameProto.PlayerToLobby) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.PlayerToLobby;
      }
    }

    /// <summary>Field number for the "chatMessage" field.</summary>
    public const int ChatMessageFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PsionicsCardGameProto.ChatMessage ChatMessage {
      get { return resultCase_ == ResultOneofCase.ChatMessage ? (global::PsionicsCardGameProto.ChatMessage) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.ChatMessage;
      }
    }

    /// <summary>Field number for the "gameCreated" field.</summary>
    public const int GameCreatedFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PsionicsCardGameProto.GameCreated GameCreated {
      get { return resultCase_ == ResultOneofCase.GameCreated ? (global::PsionicsCardGameProto.GameCreated) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.GameCreated;
      }
    }

    /// <summary>Field number for the "gameIsReadyToStart" field.</summary>
    public const int GameIsReadyToStartFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PsionicsCardGameProto.GameIsReadyToStart GameIsReadyToStart {
      get { return resultCase_ == ResultOneofCase.GameIsReadyToStart ? (global::PsionicsCardGameProto.GameIsReadyToStart) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.GameIsReadyToStart;
      }
    }

    /// <summary>Field number for the "updateActiveGames" field.</summary>
    public const int UpdateActiveGamesFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PsionicsCardGameProto.UpdateActiveGames UpdateActiveGames {
      get { return resultCase_ == ResultOneofCase.UpdateActiveGames ? (global::PsionicsCardGameProto.UpdateActiveGames) result_ : null; }
      set {
        result_ = value;
        resultCase_ = value == null ? ResultOneofCase.None : ResultOneofCase.UpdateActiveGames;
      }
    }

    private object result_;
    /// <summary>Enum of possible cases for the "result" oneof.</summary>
    public enum ResultOneofCase {
      None = 0,
      Welcome = 1,
      Player = 2,
      PlayerPosition = 3,
      PlayerRotation = 4,
      ChangeScene = 5,
      PlayerToLobby = 6,
      ChatMessage = 7,
      GameCreated = 8,
      GameIsReadyToStart = 9,
      UpdateActiveGames = 10,
    }
    private ResultOneofCase resultCase_ = ResultOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultOneofCase ResultCase {
      get { return resultCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResult() {
      resultCase_ = ResultOneofCase.None;
      result_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Welcome, other.Welcome)) return false;
      if (!object.Equals(Player, other.Player)) return false;
      if (!object.Equals(PlayerPosition, other.PlayerPosition)) return false;
      if (!object.Equals(PlayerRotation, other.PlayerRotation)) return false;
      if (!object.Equals(ChangeScene, other.ChangeScene)) return false;
      if (!object.Equals(PlayerToLobby, other.PlayerToLobby)) return false;
      if (!object.Equals(ChatMessage, other.ChatMessage)) return false;
      if (!object.Equals(GameCreated, other.GameCreated)) return false;
      if (!object.Equals(GameIsReadyToStart, other.GameIsReadyToStart)) return false;
      if (!object.Equals(UpdateActiveGames, other.UpdateActiveGames)) return false;
      if (ResultCase != other.ResultCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (resultCase_ == ResultOneofCase.Welcome) hash ^= Welcome.GetHashCode();
      if (resultCase_ == ResultOneofCase.Player) hash ^= Player.GetHashCode();
      if (resultCase_ == ResultOneofCase.PlayerPosition) hash ^= PlayerPosition.GetHashCode();
      if (resultCase_ == ResultOneofCase.PlayerRotation) hash ^= PlayerRotation.GetHashCode();
      if (resultCase_ == ResultOneofCase.ChangeScene) hash ^= ChangeScene.GetHashCode();
      if (resultCase_ == ResultOneofCase.PlayerToLobby) hash ^= PlayerToLobby.GetHashCode();
      if (resultCase_ == ResultOneofCase.ChatMessage) hash ^= ChatMessage.GetHashCode();
      if (resultCase_ == ResultOneofCase.GameCreated) hash ^= GameCreated.GetHashCode();
      if (resultCase_ == ResultOneofCase.GameIsReadyToStart) hash ^= GameIsReadyToStart.GetHashCode();
      if (resultCase_ == ResultOneofCase.UpdateActiveGames) hash ^= UpdateActiveGames.GetHashCode();
      hash ^= (int) resultCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (resultCase_ == ResultOneofCase.Welcome) {
        output.WriteRawTag(10);
        output.WriteMessage(Welcome);
      }
      if (resultCase_ == ResultOneofCase.Player) {
        output.WriteRawTag(18);
        output.WriteMessage(Player);
      }
      if (resultCase_ == ResultOneofCase.PlayerPosition) {
        output.WriteRawTag(26);
        output.WriteMessage(PlayerPosition);
      }
      if (resultCase_ == ResultOneofCase.PlayerRotation) {
        output.WriteRawTag(34);
        output.WriteMessage(PlayerRotation);
      }
      if (resultCase_ == ResultOneofCase.ChangeScene) {
        output.WriteRawTag(42);
        output.WriteMessage(ChangeScene);
      }
      if (resultCase_ == ResultOneofCase.PlayerToLobby) {
        output.WriteRawTag(50);
        output.WriteMessage(PlayerToLobby);
      }
      if (resultCase_ == ResultOneofCase.ChatMessage) {
        output.WriteRawTag(58);
        output.WriteMessage(ChatMessage);
      }
      if (resultCase_ == ResultOneofCase.GameCreated) {
        output.WriteRawTag(66);
        output.WriteMessage(GameCreated);
      }
      if (resultCase_ == ResultOneofCase.GameIsReadyToStart) {
        output.WriteRawTag(74);
        output.WriteMessage(GameIsReadyToStart);
      }
      if (resultCase_ == ResultOneofCase.UpdateActiveGames) {
        output.WriteRawTag(82);
        output.WriteMessage(UpdateActiveGames);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (resultCase_ == ResultOneofCase.Welcome) {
        output.WriteRawTag(10);
        output.WriteMessage(Welcome);
      }
      if (resultCase_ == ResultOneofCase.Player) {
        output.WriteRawTag(18);
        output.WriteMessage(Player);
      }
      if (resultCase_ == ResultOneofCase.PlayerPosition) {
        output.WriteRawTag(26);
        output.WriteMessage(PlayerPosition);
      }
      if (resultCase_ == ResultOneofCase.PlayerRotation) {
        output.WriteRawTag(34);
        output.WriteMessage(PlayerRotation);
      }
      if (resultCase_ == ResultOneofCase.ChangeScene) {
        output.WriteRawTag(42);
        output.WriteMessage(ChangeScene);
      }
      if (resultCase_ == ResultOneofCase.PlayerToLobby) {
        output.WriteRawTag(50);
        output.WriteMessage(PlayerToLobby);
      }
      if (resultCase_ == ResultOneofCase.ChatMessage) {
        output.WriteRawTag(58);
        output.WriteMessage(ChatMessage);
      }
      if (resultCase_ == ResultOneofCase.GameCreated) {
        output.WriteRawTag(66);
        output.WriteMessage(GameCreated);
      }
      if (resultCase_ == ResultOneofCase.GameIsReadyToStart) {
        output.WriteRawTag(74);
        output.WriteMessage(GameIsReadyToStart);
      }
      if (resultCase_ == ResultOneofCase.UpdateActiveGames) {
        output.WriteRawTag(82);
        output.WriteMessage(UpdateActiveGames);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (resultCase_ == ResultOneofCase.Welcome) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Welcome);
      }
      if (resultCase_ == ResultOneofCase.Player) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player);
      }
      if (resultCase_ == ResultOneofCase.PlayerPosition) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerPosition);
      }
      if (resultCase_ == ResultOneofCase.PlayerRotation) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerRotation);
      }
      if (resultCase_ == ResultOneofCase.ChangeScene) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChangeScene);
      }
      if (resultCase_ == ResultOneofCase.PlayerToLobby) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerToLobby);
      }
      if (resultCase_ == ResultOneofCase.ChatMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatMessage);
      }
      if (resultCase_ == ResultOneofCase.GameCreated) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameCreated);
      }
      if (resultCase_ == ResultOneofCase.GameIsReadyToStart) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GameIsReadyToStart);
      }
      if (resultCase_ == ResultOneofCase.UpdateActiveGames) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateActiveGames);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerResponse other) {
      if (other == null) {
        return;
      }
      switch (other.ResultCase) {
        case ResultOneofCase.Welcome:
          if (Welcome == null) {
            Welcome = new global::PsionicsCardGameProto.Welcome();
          }
          Welcome.MergeFrom(other.Welcome);
          break;
        case ResultOneofCase.Player:
          if (Player == null) {
            Player = new global::PsionicsCardGameProto.ServerPlayer();
          }
          Player.MergeFrom(other.Player);
          break;
        case ResultOneofCase.PlayerPosition:
          if (PlayerPosition == null) {
            PlayerPosition = new global::PsionicsCardGameProto.PlayerPosition();
          }
          PlayerPosition.MergeFrom(other.PlayerPosition);
          break;
        case ResultOneofCase.PlayerRotation:
          if (PlayerRotation == null) {
            PlayerRotation = new global::PsionicsCardGameProto.PlayerRotation();
          }
          PlayerRotation.MergeFrom(other.PlayerRotation);
          break;
        case ResultOneofCase.ChangeScene:
          if (ChangeScene == null) {
            ChangeScene = new global::PsionicsCardGameProto.ChangeScene();
          }
          ChangeScene.MergeFrom(other.ChangeScene);
          break;
        case ResultOneofCase.PlayerToLobby:
          if (PlayerToLobby == null) {
            PlayerToLobby = new global::PsionicsCardGameProto.PlayerToLobby();
          }
          PlayerToLobby.MergeFrom(other.PlayerToLobby);
          break;
        case ResultOneofCase.ChatMessage:
          if (ChatMessage == null) {
            ChatMessage = new global::PsionicsCardGameProto.ChatMessage();
          }
          ChatMessage.MergeFrom(other.ChatMessage);
          break;
        case ResultOneofCase.GameCreated:
          if (GameCreated == null) {
            GameCreated = new global::PsionicsCardGameProto.GameCreated();
          }
          GameCreated.MergeFrom(other.GameCreated);
          break;
        case ResultOneofCase.GameIsReadyToStart:
          if (GameIsReadyToStart == null) {
            GameIsReadyToStart = new global::PsionicsCardGameProto.GameIsReadyToStart();
          }
          GameIsReadyToStart.MergeFrom(other.GameIsReadyToStart);
          break;
        case ResultOneofCase.UpdateActiveGames:
          if (UpdateActiveGames == null) {
            UpdateActiveGames = new global::PsionicsCardGameProto.UpdateActiveGames();
          }
          UpdateActiveGames.MergeFrom(other.UpdateActiveGames);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::PsionicsCardGameProto.Welcome subBuilder = new global::PsionicsCardGameProto.Welcome();
            if (resultCase_ == ResultOneofCase.Welcome) {
              subBuilder.MergeFrom(Welcome);
            }
            input.ReadMessage(subBuilder);
            Welcome = subBuilder;
            break;
          }
          case 18: {
            global::PsionicsCardGameProto.ServerPlayer subBuilder = new global::PsionicsCardGameProto.ServerPlayer();
            if (resultCase_ == ResultOneofCase.Player) {
              subBuilder.MergeFrom(Player);
            }
            input.ReadMessage(subBuilder);
            Player = subBuilder;
            break;
          }
          case 26: {
            global::PsionicsCardGameProto.PlayerPosition subBuilder = new global::PsionicsCardGameProto.PlayerPosition();
            if (resultCase_ == ResultOneofCase.PlayerPosition) {
              subBuilder.MergeFrom(PlayerPosition);
            }
            input.ReadMessage(subBuilder);
            PlayerPosition = subBuilder;
            break;
          }
          case 34: {
            global::PsionicsCardGameProto.PlayerRotation subBuilder = new global::PsionicsCardGameProto.PlayerRotation();
            if (resultCase_ == ResultOneofCase.PlayerRotation) {
              subBuilder.MergeFrom(PlayerRotation);
            }
            input.ReadMessage(subBuilder);
            PlayerRotation = subBuilder;
            break;
          }
          case 42: {
            global::PsionicsCardGameProto.ChangeScene subBuilder = new global::PsionicsCardGameProto.ChangeScene();
            if (resultCase_ == ResultOneofCase.ChangeScene) {
              subBuilder.MergeFrom(ChangeScene);
            }
            input.ReadMessage(subBuilder);
            ChangeScene = subBuilder;
            break;
          }
          case 50: {
            global::PsionicsCardGameProto.PlayerToLobby subBuilder = new global::PsionicsCardGameProto.PlayerToLobby();
            if (resultCase_ == ResultOneofCase.PlayerToLobby) {
              subBuilder.MergeFrom(PlayerToLobby);
            }
            input.ReadMessage(subBuilder);
            PlayerToLobby = subBuilder;
            break;
          }
          case 58: {
            global::PsionicsCardGameProto.ChatMessage subBuilder = new global::PsionicsCardGameProto.ChatMessage();
            if (resultCase_ == ResultOneofCase.ChatMessage) {
              subBuilder.MergeFrom(ChatMessage);
            }
            input.ReadMessage(subBuilder);
            ChatMessage = subBuilder;
            break;
          }
          case 66: {
            global::PsionicsCardGameProto.GameCreated subBuilder = new global::PsionicsCardGameProto.GameCreated();
            if (resultCase_ == ResultOneofCase.GameCreated) {
              subBuilder.MergeFrom(GameCreated);
            }
            input.ReadMessage(subBuilder);
            GameCreated = subBuilder;
            break;
          }
          case 74: {
            global::PsionicsCardGameProto.GameIsReadyToStart subBuilder = new global::PsionicsCardGameProto.GameIsReadyToStart();
            if (resultCase_ == ResultOneofCase.GameIsReadyToStart) {
              subBuilder.MergeFrom(GameIsReadyToStart);
            }
            input.ReadMessage(subBuilder);
            GameIsReadyToStart = subBuilder;
            break;
          }
          case 82: {
            global::PsionicsCardGameProto.UpdateActiveGames subBuilder = new global::PsionicsCardGameProto.UpdateActiveGames();
            if (resultCase_ == ResultOneofCase.UpdateActiveGames) {
              subBuilder.MergeFrom(UpdateActiveGames);
            }
            input.ReadMessage(subBuilder);
            UpdateActiveGames = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::PsionicsCardGameProto.Welcome subBuilder = new global::PsionicsCardGameProto.Welcome();
            if (resultCase_ == ResultOneofCase.Welcome) {
              subBuilder.MergeFrom(Welcome);
            }
            input.ReadMessage(subBuilder);
            Welcome = subBuilder;
            break;
          }
          case 18: {
            global::PsionicsCardGameProto.ServerPlayer subBuilder = new global::PsionicsCardGameProto.ServerPlayer();
            if (resultCase_ == ResultOneofCase.Player) {
              subBuilder.MergeFrom(Player);
            }
            input.ReadMessage(subBuilder);
            Player = subBuilder;
            break;
          }
          case 26: {
            global::PsionicsCardGameProto.PlayerPosition subBuilder = new global::PsionicsCardGameProto.PlayerPosition();
            if (resultCase_ == ResultOneofCase.PlayerPosition) {
              subBuilder.MergeFrom(PlayerPosition);
            }
            input.ReadMessage(subBuilder);
            PlayerPosition = subBuilder;
            break;
          }
          case 34: {
            global::PsionicsCardGameProto.PlayerRotation subBuilder = new global::PsionicsCardGameProto.PlayerRotation();
            if (resultCase_ == ResultOneofCase.PlayerRotation) {
              subBuilder.MergeFrom(PlayerRotation);
            }
            input.ReadMessage(subBuilder);
            PlayerRotation = subBuilder;
            break;
          }
          case 42: {
            global::PsionicsCardGameProto.ChangeScene subBuilder = new global::PsionicsCardGameProto.ChangeScene();
            if (resultCase_ == ResultOneofCase.ChangeScene) {
              subBuilder.MergeFrom(ChangeScene);
            }
            input.ReadMessage(subBuilder);
            ChangeScene = subBuilder;
            break;
          }
          case 50: {
            global::PsionicsCardGameProto.PlayerToLobby subBuilder = new global::PsionicsCardGameProto.PlayerToLobby();
            if (resultCase_ == ResultOneofCase.PlayerToLobby) {
              subBuilder.MergeFrom(PlayerToLobby);
            }
            input.ReadMessage(subBuilder);
            PlayerToLobby = subBuilder;
            break;
          }
          case 58: {
            global::PsionicsCardGameProto.ChatMessage subBuilder = new global::PsionicsCardGameProto.ChatMessage();
            if (resultCase_ == ResultOneofCase.ChatMessage) {
              subBuilder.MergeFrom(ChatMessage);
            }
            input.ReadMessage(subBuilder);
            ChatMessage = subBuilder;
            break;
          }
          case 66: {
            global::PsionicsCardGameProto.GameCreated subBuilder = new global::PsionicsCardGameProto.GameCreated();
            if (resultCase_ == ResultOneofCase.GameCreated) {
              subBuilder.MergeFrom(GameCreated);
            }
            input.ReadMessage(subBuilder);
            GameCreated = subBuilder;
            break;
          }
          case 74: {
            global::PsionicsCardGameProto.GameIsReadyToStart subBuilder = new global::PsionicsCardGameProto.GameIsReadyToStart();
            if (resultCase_ == ResultOneofCase.GameIsReadyToStart) {
              subBuilder.MergeFrom(GameIsReadyToStart);
            }
            input.ReadMessage(subBuilder);
            GameIsReadyToStart = subBuilder;
            break;
          }
          case 82: {
            global::PsionicsCardGameProto.UpdateActiveGames subBuilder = new global::PsionicsCardGameProto.UpdateActiveGames();
            if (resultCase_ == ResultOneofCase.UpdateActiveGames) {
              subBuilder.MergeFrom(UpdateActiveGames);
            }
            input.ReadMessage(subBuilder);
            UpdateActiveGames = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClientRequest : pb::IMessage<ClientRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClientRequest> _parser = new pb::MessageParser<ClientRequest>(() => new ClientRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PsionicsCardGameProto.PsionicsCardGameReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientRequest(ClientRequest other) : this() {
      switch (other.RequestCase) {
        case RequestOneofCase.WelcomeReceived:
          WelcomeReceived = other.WelcomeReceived.Clone();
          break;
        case RequestOneofCase.UdpWelcome:
          UdpWelcome = other.UdpWelcome.Clone();
          break;
        case RequestOneofCase.PlayerMovement:
          PlayerMovement = other.PlayerMovement.Clone();
          break;
        case RequestOneofCase.ChangeScene:
          ChangeScene = other.ChangeScene.Clone();
          break;
        case RequestOneofCase.ChatMessage:
          ChatMessage = other.ChatMessage.Clone();
          break;
        case RequestOneofCase.CreateGame:
          CreateGame = other.CreateGame.Clone();
          break;
        case RequestOneofCase.JoinGame:
          JoinGame = other.JoinGame.Clone();
          break;
        case RequestOneofCase.SendIntoGame:
          SendIntoGame = other.SendIntoGame.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientRequest Clone() {
      return new ClientRequest(this);
    }

    /// <summary>Field number for the "welcomeReceived" field.</summary>
    public const int WelcomeReceivedFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PsionicsCardGameProto.WelcomeReceived WelcomeReceived {
      get { return requestCase_ == RequestOneofCase.WelcomeReceived ? (global::PsionicsCardGameProto.WelcomeReceived) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.WelcomeReceived;
      }
    }

    /// <summary>Field number for the "udpWelcome" field.</summary>
    public const int UdpWelcomeFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PsionicsCardGameProto.UdpWelcome UdpWelcome {
      get { return requestCase_ == RequestOneofCase.UdpWelcome ? (global::PsionicsCardGameProto.UdpWelcome) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.UdpWelcome;
      }
    }

    /// <summary>Field number for the "playerMovement" field.</summary>
    public const int PlayerMovementFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PsionicsCardGameProto.PlayerMovement PlayerMovement {
      get { return requestCase_ == RequestOneofCase.PlayerMovement ? (global::PsionicsCardGameProto.PlayerMovement) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.PlayerMovement;
      }
    }

    /// <summary>Field number for the "changeScene" field.</summary>
    public const int ChangeSceneFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PsionicsCardGameProto.ChangeScene ChangeScene {
      get { return requestCase_ == RequestOneofCase.ChangeScene ? (global::PsionicsCardGameProto.ChangeScene) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.ChangeScene;
      }
    }

    /// <summary>Field number for the "chatMessage" field.</summary>
    public const int ChatMessageFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PsionicsCardGameProto.ChatMessage ChatMessage {
      get { return requestCase_ == RequestOneofCase.ChatMessage ? (global::PsionicsCardGameProto.ChatMessage) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.ChatMessage;
      }
    }

    /// <summary>Field number for the "createGame" field.</summary>
    public const int CreateGameFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PsionicsCardGameProto.CreateGame CreateGame {
      get { return requestCase_ == RequestOneofCase.CreateGame ? (global::PsionicsCardGameProto.CreateGame) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.CreateGame;
      }
    }

    /// <summary>Field number for the "joinGame" field.</summary>
    public const int JoinGameFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PsionicsCardGameProto.JoinGame JoinGame {
      get { return requestCase_ == RequestOneofCase.JoinGame ? (global::PsionicsCardGameProto.JoinGame) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.JoinGame;
      }
    }

    /// <summary>Field number for the "sendIntoGame" field.</summary>
    public const int SendIntoGameFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PsionicsCardGameProto.SendIntoGame SendIntoGame {
      get { return requestCase_ == RequestOneofCase.SendIntoGame ? (global::PsionicsCardGameProto.SendIntoGame) request_ : null; }
      set {
        request_ = value;
        requestCase_ = value == null ? RequestOneofCase.None : RequestOneofCase.SendIntoGame;
      }
    }

    private object request_;
    /// <summary>Enum of possible cases for the "request" oneof.</summary>
    public enum RequestOneofCase {
      None = 0,
      WelcomeReceived = 1,
      UdpWelcome = 2,
      PlayerMovement = 3,
      ChangeScene = 4,
      ChatMessage = 5,
      CreateGame = 6,
      JoinGame = 7,
      SendIntoGame = 8,
    }
    private RequestOneofCase requestCase_ = RequestOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestOneofCase RequestCase {
      get { return requestCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequest() {
      requestCase_ = RequestOneofCase.None;
      request_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(WelcomeReceived, other.WelcomeReceived)) return false;
      if (!object.Equals(UdpWelcome, other.UdpWelcome)) return false;
      if (!object.Equals(PlayerMovement, other.PlayerMovement)) return false;
      if (!object.Equals(ChangeScene, other.ChangeScene)) return false;
      if (!object.Equals(ChatMessage, other.ChatMessage)) return false;
      if (!object.Equals(CreateGame, other.CreateGame)) return false;
      if (!object.Equals(JoinGame, other.JoinGame)) return false;
      if (!object.Equals(SendIntoGame, other.SendIntoGame)) return false;
      if (RequestCase != other.RequestCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (requestCase_ == RequestOneofCase.WelcomeReceived) hash ^= WelcomeReceived.GetHashCode();
      if (requestCase_ == RequestOneofCase.UdpWelcome) hash ^= UdpWelcome.GetHashCode();
      if (requestCase_ == RequestOneofCase.PlayerMovement) hash ^= PlayerMovement.GetHashCode();
      if (requestCase_ == RequestOneofCase.ChangeScene) hash ^= ChangeScene.GetHashCode();
      if (requestCase_ == RequestOneofCase.ChatMessage) hash ^= ChatMessage.GetHashCode();
      if (requestCase_ == RequestOneofCase.CreateGame) hash ^= CreateGame.GetHashCode();
      if (requestCase_ == RequestOneofCase.JoinGame) hash ^= JoinGame.GetHashCode();
      if (requestCase_ == RequestOneofCase.SendIntoGame) hash ^= SendIntoGame.GetHashCode();
      hash ^= (int) requestCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (requestCase_ == RequestOneofCase.WelcomeReceived) {
        output.WriteRawTag(10);
        output.WriteMessage(WelcomeReceived);
      }
      if (requestCase_ == RequestOneofCase.UdpWelcome) {
        output.WriteRawTag(18);
        output.WriteMessage(UdpWelcome);
      }
      if (requestCase_ == RequestOneofCase.PlayerMovement) {
        output.WriteRawTag(26);
        output.WriteMessage(PlayerMovement);
      }
      if (requestCase_ == RequestOneofCase.ChangeScene) {
        output.WriteRawTag(34);
        output.WriteMessage(ChangeScene);
      }
      if (requestCase_ == RequestOneofCase.ChatMessage) {
        output.WriteRawTag(42);
        output.WriteMessage(ChatMessage);
      }
      if (requestCase_ == RequestOneofCase.CreateGame) {
        output.WriteRawTag(50);
        output.WriteMessage(CreateGame);
      }
      if (requestCase_ == RequestOneofCase.JoinGame) {
        output.WriteRawTag(58);
        output.WriteMessage(JoinGame);
      }
      if (requestCase_ == RequestOneofCase.SendIntoGame) {
        output.WriteRawTag(66);
        output.WriteMessage(SendIntoGame);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (requestCase_ == RequestOneofCase.WelcomeReceived) {
        output.WriteRawTag(10);
        output.WriteMessage(WelcomeReceived);
      }
      if (requestCase_ == RequestOneofCase.UdpWelcome) {
        output.WriteRawTag(18);
        output.WriteMessage(UdpWelcome);
      }
      if (requestCase_ == RequestOneofCase.PlayerMovement) {
        output.WriteRawTag(26);
        output.WriteMessage(PlayerMovement);
      }
      if (requestCase_ == RequestOneofCase.ChangeScene) {
        output.WriteRawTag(34);
        output.WriteMessage(ChangeScene);
      }
      if (requestCase_ == RequestOneofCase.ChatMessage) {
        output.WriteRawTag(42);
        output.WriteMessage(ChatMessage);
      }
      if (requestCase_ == RequestOneofCase.CreateGame) {
        output.WriteRawTag(50);
        output.WriteMessage(CreateGame);
      }
      if (requestCase_ == RequestOneofCase.JoinGame) {
        output.WriteRawTag(58);
        output.WriteMessage(JoinGame);
      }
      if (requestCase_ == RequestOneofCase.SendIntoGame) {
        output.WriteRawTag(66);
        output.WriteMessage(SendIntoGame);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (requestCase_ == RequestOneofCase.WelcomeReceived) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WelcomeReceived);
      }
      if (requestCase_ == RequestOneofCase.UdpWelcome) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UdpWelcome);
      }
      if (requestCase_ == RequestOneofCase.PlayerMovement) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerMovement);
      }
      if (requestCase_ == RequestOneofCase.ChangeScene) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChangeScene);
      }
      if (requestCase_ == RequestOneofCase.ChatMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatMessage);
      }
      if (requestCase_ == RequestOneofCase.CreateGame) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateGame);
      }
      if (requestCase_ == RequestOneofCase.JoinGame) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JoinGame);
      }
      if (requestCase_ == RequestOneofCase.SendIntoGame) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SendIntoGame);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientRequest other) {
      if (other == null) {
        return;
      }
      switch (other.RequestCase) {
        case RequestOneofCase.WelcomeReceived:
          if (WelcomeReceived == null) {
            WelcomeReceived = new global::PsionicsCardGameProto.WelcomeReceived();
          }
          WelcomeReceived.MergeFrom(other.WelcomeReceived);
          break;
        case RequestOneofCase.UdpWelcome:
          if (UdpWelcome == null) {
            UdpWelcome = new global::PsionicsCardGameProto.UdpWelcome();
          }
          UdpWelcome.MergeFrom(other.UdpWelcome);
          break;
        case RequestOneofCase.PlayerMovement:
          if (PlayerMovement == null) {
            PlayerMovement = new global::PsionicsCardGameProto.PlayerMovement();
          }
          PlayerMovement.MergeFrom(other.PlayerMovement);
          break;
        case RequestOneofCase.ChangeScene:
          if (ChangeScene == null) {
            ChangeScene = new global::PsionicsCardGameProto.ChangeScene();
          }
          ChangeScene.MergeFrom(other.ChangeScene);
          break;
        case RequestOneofCase.ChatMessage:
          if (ChatMessage == null) {
            ChatMessage = new global::PsionicsCardGameProto.ChatMessage();
          }
          ChatMessage.MergeFrom(other.ChatMessage);
          break;
        case RequestOneofCase.CreateGame:
          if (CreateGame == null) {
            CreateGame = new global::PsionicsCardGameProto.CreateGame();
          }
          CreateGame.MergeFrom(other.CreateGame);
          break;
        case RequestOneofCase.JoinGame:
          if (JoinGame == null) {
            JoinGame = new global::PsionicsCardGameProto.JoinGame();
          }
          JoinGame.MergeFrom(other.JoinGame);
          break;
        case RequestOneofCase.SendIntoGame:
          if (SendIntoGame == null) {
            SendIntoGame = new global::PsionicsCardGameProto.SendIntoGame();
          }
          SendIntoGame.MergeFrom(other.SendIntoGame);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::PsionicsCardGameProto.WelcomeReceived subBuilder = new global::PsionicsCardGameProto.WelcomeReceived();
            if (requestCase_ == RequestOneofCase.WelcomeReceived) {
              subBuilder.MergeFrom(WelcomeReceived);
            }
            input.ReadMessage(subBuilder);
            WelcomeReceived = subBuilder;
            break;
          }
          case 18: {
            global::PsionicsCardGameProto.UdpWelcome subBuilder = new global::PsionicsCardGameProto.UdpWelcome();
            if (requestCase_ == RequestOneofCase.UdpWelcome) {
              subBuilder.MergeFrom(UdpWelcome);
            }
            input.ReadMessage(subBuilder);
            UdpWelcome = subBuilder;
            break;
          }
          case 26: {
            global::PsionicsCardGameProto.PlayerMovement subBuilder = new global::PsionicsCardGameProto.PlayerMovement();
            if (requestCase_ == RequestOneofCase.PlayerMovement) {
              subBuilder.MergeFrom(PlayerMovement);
            }
            input.ReadMessage(subBuilder);
            PlayerMovement = subBuilder;
            break;
          }
          case 34: {
            global::PsionicsCardGameProto.ChangeScene subBuilder = new global::PsionicsCardGameProto.ChangeScene();
            if (requestCase_ == RequestOneofCase.ChangeScene) {
              subBuilder.MergeFrom(ChangeScene);
            }
            input.ReadMessage(subBuilder);
            ChangeScene = subBuilder;
            break;
          }
          case 42: {
            global::PsionicsCardGameProto.ChatMessage subBuilder = new global::PsionicsCardGameProto.ChatMessage();
            if (requestCase_ == RequestOneofCase.ChatMessage) {
              subBuilder.MergeFrom(ChatMessage);
            }
            input.ReadMessage(subBuilder);
            ChatMessage = subBuilder;
            break;
          }
          case 50: {
            global::PsionicsCardGameProto.CreateGame subBuilder = new global::PsionicsCardGameProto.CreateGame();
            if (requestCase_ == RequestOneofCase.CreateGame) {
              subBuilder.MergeFrom(CreateGame);
            }
            input.ReadMessage(subBuilder);
            CreateGame = subBuilder;
            break;
          }
          case 58: {
            global::PsionicsCardGameProto.JoinGame subBuilder = new global::PsionicsCardGameProto.JoinGame();
            if (requestCase_ == RequestOneofCase.JoinGame) {
              subBuilder.MergeFrom(JoinGame);
            }
            input.ReadMessage(subBuilder);
            JoinGame = subBuilder;
            break;
          }
          case 66: {
            global::PsionicsCardGameProto.SendIntoGame subBuilder = new global::PsionicsCardGameProto.SendIntoGame();
            if (requestCase_ == RequestOneofCase.SendIntoGame) {
              subBuilder.MergeFrom(SendIntoGame);
            }
            input.ReadMessage(subBuilder);
            SendIntoGame = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::PsionicsCardGameProto.WelcomeReceived subBuilder = new global::PsionicsCardGameProto.WelcomeReceived();
            if (requestCase_ == RequestOneofCase.WelcomeReceived) {
              subBuilder.MergeFrom(WelcomeReceived);
            }
            input.ReadMessage(subBuilder);
            WelcomeReceived = subBuilder;
            break;
          }
          case 18: {
            global::PsionicsCardGameProto.UdpWelcome subBuilder = new global::PsionicsCardGameProto.UdpWelcome();
            if (requestCase_ == RequestOneofCase.UdpWelcome) {
              subBuilder.MergeFrom(UdpWelcome);
            }
            input.ReadMessage(subBuilder);
            UdpWelcome = subBuilder;
            break;
          }
          case 26: {
            global::PsionicsCardGameProto.PlayerMovement subBuilder = new global::PsionicsCardGameProto.PlayerMovement();
            if (requestCase_ == RequestOneofCase.PlayerMovement) {
              subBuilder.MergeFrom(PlayerMovement);
            }
            input.ReadMessage(subBuilder);
            PlayerMovement = subBuilder;
            break;
          }
          case 34: {
            global::PsionicsCardGameProto.ChangeScene subBuilder = new global::PsionicsCardGameProto.ChangeScene();
            if (requestCase_ == RequestOneofCase.ChangeScene) {
              subBuilder.MergeFrom(ChangeScene);
            }
            input.ReadMessage(subBuilder);
            ChangeScene = subBuilder;
            break;
          }
          case 42: {
            global::PsionicsCardGameProto.ChatMessage subBuilder = new global::PsionicsCardGameProto.ChatMessage();
            if (requestCase_ == RequestOneofCase.ChatMessage) {
              subBuilder.MergeFrom(ChatMessage);
            }
            input.ReadMessage(subBuilder);
            ChatMessage = subBuilder;
            break;
          }
          case 50: {
            global::PsionicsCardGameProto.CreateGame subBuilder = new global::PsionicsCardGameProto.CreateGame();
            if (requestCase_ == RequestOneofCase.CreateGame) {
              subBuilder.MergeFrom(CreateGame);
            }
            input.ReadMessage(subBuilder);
            CreateGame = subBuilder;
            break;
          }
          case 58: {
            global::PsionicsCardGameProto.JoinGame subBuilder = new global::PsionicsCardGameProto.JoinGame();
            if (requestCase_ == RequestOneofCase.JoinGame) {
              subBuilder.MergeFrom(JoinGame);
            }
            input.ReadMessage(subBuilder);
            JoinGame = subBuilder;
            break;
          }
          case 66: {
            global::PsionicsCardGameProto.SendIntoGame subBuilder = new global::PsionicsCardGameProto.SendIntoGame();
            if (requestCase_ == RequestOneofCase.SendIntoGame) {
              subBuilder.MergeFrom(SendIntoGame);
            }
            input.ReadMessage(subBuilder);
            SendIntoGame = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
